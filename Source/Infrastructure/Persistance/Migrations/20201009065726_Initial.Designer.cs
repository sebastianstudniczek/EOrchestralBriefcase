// <auto-generated />
using System;
using EOrchestralBriefcase.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201009065726_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EOrchestralBriefcase.Domain.Entities.OrchestralBriefcase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrchestralBriefcaseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("OrchestralBriefcases");
                });

            modelBuilder.Entity("EOrchestralBriefcase.Domain.Entities.OrchestralBriefcaseOrchestralPiece", b =>
                {
                    b.Property<int>("OrchestralBriefcaseId")
                        .HasColumnType("int");

                    b.Property<int>("OrchestralPieceId")
                        .HasColumnType("int");

                    b.Property<int>("NumberInBriefcase")
                        .HasColumnType("int");

                    b.HasKey("OrchestralBriefcaseId", "OrchestralPieceId");

                    b.HasIndex("OrchestralPieceId");

                    b.ToTable("OrchestralBriefcaseOrchestralPiece");
                });

            modelBuilder.Entity("EOrchestralBriefcase.Domain.Entities.OrchestralPiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrchestralPieceID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Composer")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<string>("SongLink")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<int?>("Tempo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("OrchestralPieces");
                });

            modelBuilder.Entity("EOrchestralBriefcase.Domain.Entities.SheetFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SheetFileID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("OrchestralPieceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("OrchestralPieceId");

                    b.ToTable("SheetFiles");
                });

            modelBuilder.Entity("EOrchestralBriefcase.Domain.Entities.OrchestralBriefcaseOrchestralPiece", b =>
                {
                    b.HasOne("EOrchestralBriefcase.Domain.Entities.OrchestralBriefcase", "OrchestralBriefcase")
                        .WithMany("OrchestralPieceLinks")
                        .HasForeignKey("OrchestralBriefcaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EOrchestralBriefcase.Domain.Entities.OrchestralPiece", "OrchestralPiece")
                        .WithMany("OrchestralBriefcaseLinks")
                        .HasForeignKey("OrchestralPieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EOrchestralBriefcase.Domain.Entities.SheetFile", b =>
                {
                    b.HasOne("EOrchestralBriefcase.Domain.Entities.OrchestralPiece", "OrchestralPiece")
                        .WithMany("SheetFiles")
                        .HasForeignKey("OrchestralPieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
